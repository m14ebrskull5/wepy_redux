<style lang="less">
.cell-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  height: 200rpx;
  width: 90%;
  border-radius: 10rpx;
  margin-top: 20rpx;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}
.cell-container text {
  margin-left: 15rpx;
}
.cell-container view {
  margin-right: 15rpx;
}

.cell-container image {
  width: 200rpx;
  height: 120rpx;
}

.cell-container image:first-child {
  margin-right: 20rpx;
}

.button-container {
  width: 90%;
  margin-top: 30rpx;
}
</style>
<template>
  <view class="container">
      <Panel>
          <text slot="title">{{list.openid}}</text>
      </Panel>
    <repeat for="{{list.index}}" key="index" index="index" item="item">
      <view class='cell-container'>
        <text>{{item.name}}</text>
        <image src='{{item.userpic}}' @tap='gotoEdit({{item.id}})'/>
        <view>
          <image src='../../images/close.png' mode='aspectFit' @tap='removeTodo({{item._id}})'/>
        </view>
      </view>
    </repeat>
    <view class='button-container'>
        <button type='primary' size='default' @tap='gotoCreate'>Add Todo</button>
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import Tip from '../utils/tips'
  import { connect } from 'wepy-redux'
  import { Todo } from '../store/actions'
  import wxRequest from '../utils/wx_request'
  import Panel from '../components/panel'

  const { fetchList, deleteTodo } = Todo

  @connect({
    list (state) {
      return state.todo.list
    }
  }, {
    fetchList,
    deleteTodo
  })

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'Wepy Redux'
    }

    components = {
      Panel: Panel
    }

    data = {}

    computed = {}

    methods = {
      gotoEdit (id) {
        wepy.navigateTo({
          url: `./edit?todoId=${id}`
        })
      },
      gotoCreate () {
        wepy.navigateTo({
          url: `./create`
        })
      },
      removeTodo (id) {
        let self = this
        Tip.confirm('Delete this todo?', (confirm) => {
          confirm && self.methods.deleteTodo(id)
        })
      }
    }

    async onLoad() {
      this.methods.fetchList()
      let code = await wxRequest.get()
      console.log('code', code)
    }
  }
</script>
